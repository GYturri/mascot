# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-07-11 15:22
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=8, unique=True)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('sexo', models.CharField(choices=[('A', 'masculino'), ('B', 'femenino')], default='A', max_length=1)),
                ('nacimiento', models.DateField(verbose_name='fecha de nacimiento')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='static/fotos/usuarios/', verbose_name=models.CharField(max_length=8, unique=True))),
                ('celular', models.CharField(max_length=9)),
                ('direccion', models.CharField(max_length=200)),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='fecha de registro')),
                ('modified', models.DateTimeField(blank=True, null=True, verbose_name='fecha de modificacion')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
